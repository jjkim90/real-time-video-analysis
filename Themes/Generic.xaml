<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:RealTimeVideoAnalysis.CustomControls"
    xmlns:cv="clr-namespace:RealTimeVideoAnalysis.Converters">

    <!-- Converters -->
    <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!-- Modern Color Palette -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="#FF5B7FFF"/>
    <SolidColorBrush x:Key="PrimaryHoverBrush" Color="#FF4366E0"/>
    <SolidColorBrush x:Key="SuccessBrush" Color="#FF00C896"/>
    <SolidColorBrush x:Key="SuccessHoverBrush" Color="#FF00A87E"/>
    <SolidColorBrush x:Key="WarningBrush" Color="#FFFFA726"/>
    <SolidColorBrush x:Key="WarningHoverBrush" Color="#FFFF8F00"/>
    <SolidColorBrush x:Key="DangerBrush" Color="#FFFF5252"/>
    <SolidColorBrush x:Key="DangerHoverBrush" Color="#FFE04343"/>
    <SolidColorBrush x:Key="InfoBrush" Color="#FF36CFD3"/>
    <SolidColorBrush x:Key="InfoHoverBrush" Color="#FF26B5B9"/>
    <SolidColorBrush x:Key="DefaultBrush" Color="#FF6B7280"/>
    <SolidColorBrush x:Key="DefaultHoverBrush" Color="#FF4B5563"/>

    <!-- IconButton Style -->
    <Style TargetType="{x:Type local:IconButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="20,10"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconButton}">
                    <Grid>
                        <!-- Shadow Border -->
                        <Border x:Name="shadowBorder" 
                                Background="#000000" 
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="0.08"
                                Margin="0,1,0,-1">
                            <Border.Effect>
                                <BlurEffect Radius="4"/>
                            </Border.Effect>
                        </Border>
                        
                        <!-- Main Border -->
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true"
                                CornerRadius="{TemplateBinding CornerRadius}">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}">
                            <!-- Icon -->
                            <TextBlock x:Name="icon"
                                       Text="{TemplateBinding Icon}"
                                       FontFamily="Segoe MDL2 Assets"
                                       FontSize="{TemplateBinding IconSize}"
                                       VerticalAlignment="Center"
                                       Margin="0,0,8,0"
                                       Visibility="{Binding ShowIcon, RelativeSource={RelativeSource TemplatedParent}, 
                                                    Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            
                            <!-- Content -->
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="shadowBorder" 
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.15" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="shadowBorder" 
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.08" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonHoverBackground}"/>
                        </Trigger>
                        
                        <!-- Pressed Effect -->
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="RenderTransform" TargetName="border">
                                <Setter.Value>
                                    <TranslateTransform Y="1"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="shadowBorder" Property="Opacity" Value="0.05"/>
                            <Setter TargetName="shadowBorder" Property="Margin" Value="0,0.5,0,-0.5"/>
                        </Trigger>
                        
                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#FFE0E0E0"/>
                            <Setter Property="Foreground" Value="#FF9E9E9E"/>
                            <Setter TargetName="shadowBorder" Property="Opacity" Value="0"/>
                        </Trigger>
                        
                        <!-- Button Types -->
                        <Trigger Property="ButtonType" Value="Primary">
                            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryBrush}"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonType" Value="Primary"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryHoverBrush}"/>
                        </MultiTrigger>
                        
                        <Trigger Property="ButtonType" Value="Success">
                            <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource SuccessBrush}"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonType" Value="Success"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource SuccessHoverBrush}"/>
                        </MultiTrigger>
                        
                        <Trigger Property="ButtonType" Value="Warning">
                            <Setter Property="Background" Value="{StaticResource WarningBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WarningBrush}"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonType" Value="Warning"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource WarningHoverBrush}"/>
                        </MultiTrigger>
                        
                        <Trigger Property="ButtonType" Value="Danger">
                            <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DangerBrush}"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonType" Value="Danger"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DangerHoverBrush}"/>
                        </MultiTrigger>
                        
                        <Trigger Property="ButtonType" Value="Info">
                            <Setter Property="Background" Value="{StaticResource InfoBrush}"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource InfoBrush}"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonType" Value="Info"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource InfoHoverBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dynamic Resources for Default Button Type -->
    <SolidColorBrush x:Key="ButtonBackground" Color="#FF6B7280"/>
    <SolidColorBrush x:Key="ButtonHoverBackground" Color="#FF4B5563"/>
    <SolidColorBrush x:Key="ButtonBorder" Color="Transparent"/>

</ResourceDictionary>